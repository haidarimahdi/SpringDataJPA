/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Person;
import io.swagger.client.model.Project;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * TimeSlot
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-04-07T21:28:19.344429018Z[GMT]")

public class TimeSlot {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("startTime")
  private org.joda.time.* startTime = null;

  @SerializedName("endTime")
  private org.joda.time.* endTime = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("person")
  private Person person = null;

  @SerializedName("project")
  private Project project = null;

  @SerializedName("formattedDuration")
  private String formattedDuration = null;

  public TimeSlot id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public TimeSlot date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public TimeSlot startTime(org.joda.time.* startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public org.joda.time.* getStartTime() {
    return startTime;
  }

  public void setStartTime(org.joda.time.* startTime) {
    this.startTime = startTime;
  }

  public TimeSlot endTime(org.joda.time.* endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public org.joda.time.* getEndTime() {
    return endTime;
  }

  public void setEndTime(org.joda.time.* endTime) {
    this.endTime = endTime;
  }

  public TimeSlot description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TimeSlot person(Person person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @Schema(description = "")
  public Person getPerson() {
    return person;
  }

  public void setPerson(Person person) {
    this.person = person;
  }

  public TimeSlot project(Project project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public Project getProject() {
    return project;
  }

  public void setProject(Project project) {
    this.project = project;
  }

  public TimeSlot formattedDuration(String formattedDuration) {
    this.formattedDuration = formattedDuration;
    return this;
  }

   /**
   * Get formattedDuration
   * @return formattedDuration
  **/
  @Schema(description = "")
  public String getFormattedDuration() {
    return formattedDuration;
  }

  public void setFormattedDuration(String formattedDuration) {
    this.formattedDuration = formattedDuration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeSlot timeSlot = (TimeSlot) o;
    return Objects.equals(this.id, timeSlot.id) &&
        Objects.equals(this.date, timeSlot.date) &&
        Objects.equals(this.startTime, timeSlot.startTime) &&
        Objects.equals(this.endTime, timeSlot.endTime) &&
        Objects.equals(this.description, timeSlot.description) &&
        Objects.equals(this.person, timeSlot.person) &&
        Objects.equals(this.project, timeSlot.project) &&
        Objects.equals(this.formattedDuration, timeSlot.formattedDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, date, startTime, endTime, description, person, project, formattedDuration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeSlot {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    formattedDuration: ").append(toIndentedString(formattedDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
