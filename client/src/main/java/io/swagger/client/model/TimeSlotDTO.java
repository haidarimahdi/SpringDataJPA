/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * TimeSlotDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-04-07T21:28:19.344429018Z[GMT]")

public class TimeSlotDTO {
  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("startTime")
  private org.joda.time.* startTime = null;

  @SerializedName("endTime")
  private org.joda.time.* endTime = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("personId")
  private Integer personId = null;

  @SerializedName("projectId")
  private Integer projectId = null;

  @SerializedName("fullName")
  private String fullName = null;

  @SerializedName("projectName")
  private String projectName = null;

  public TimeSlotDTO date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(required = true, description = "")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public TimeSlotDTO startTime(org.joda.time.* startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(required = true, description = "")
  public org.joda.time.* getStartTime() {
    return startTime;
  }

  public void setStartTime(org.joda.time.* startTime) {
    this.startTime = startTime;
  }

  public TimeSlotDTO endTime(org.joda.time.* endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(required = true, description = "")
  public org.joda.time.* getEndTime() {
    return endTime;
  }

  public void setEndTime(org.joda.time.* endTime) {
    this.endTime = endTime;
  }

  public TimeSlotDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TimeSlotDTO personId(Integer personId) {
    this.personId = personId;
    return this;
  }

   /**
   * Get personId
   * @return personId
  **/
  @Schema(description = "")
  public Integer getPersonId() {
    return personId;
  }

  public void setPersonId(Integer personId) {
    this.personId = personId;
  }

  public TimeSlotDTO projectId(Integer projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public Integer getProjectId() {
    return projectId;
  }

  public void setProjectId(Integer projectId) {
    this.projectId = projectId;
  }

  public TimeSlotDTO fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @Schema(description = "")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public TimeSlotDTO projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeSlotDTO timeSlotDTO = (TimeSlotDTO) o;
    return Objects.equals(this.date, timeSlotDTO.date) &&
        Objects.equals(this.startTime, timeSlotDTO.startTime) &&
        Objects.equals(this.endTime, timeSlotDTO.endTime) &&
        Objects.equals(this.description, timeSlotDTO.description) &&
        Objects.equals(this.personId, timeSlotDTO.personId) &&
        Objects.equals(this.projectId, timeSlotDTO.projectId) &&
        Objects.equals(this.fullName, timeSlotDTO.fullName) &&
        Objects.equals(this.projectName, timeSlotDTO.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, startTime, endTime, description, personId, projectId, fullName, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeSlotDTO {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
