/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ProjectListDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-04-07T21:28:19.344429018Z[GMT]")

public class ProjectListDTO {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("scheduledEffort")
  private Integer scheduledEffort = null;

  @SerializedName("totalActualHours")
  private Double totalActualHours = null;

  @SerializedName("formattedScheduledEffort")
  private String formattedScheduledEffort = null;

  @SerializedName("formattedActualHours")
  private String formattedActualHours = null;

  @SerializedName("overBooked")
  private Boolean overBooked = null;

  public ProjectListDTO id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ProjectListDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProjectListDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProjectListDTO scheduledEffort(Integer scheduledEffort) {
    this.scheduledEffort = scheduledEffort;
    return this;
  }

   /**
   * Get scheduledEffort
   * @return scheduledEffort
  **/
  @Schema(description = "")
  public Integer getScheduledEffort() {
    return scheduledEffort;
  }

  public void setScheduledEffort(Integer scheduledEffort) {
    this.scheduledEffort = scheduledEffort;
  }

  public ProjectListDTO totalActualHours(Double totalActualHours) {
    this.totalActualHours = totalActualHours;
    return this;
  }

   /**
   * Get totalActualHours
   * @return totalActualHours
  **/
  @Schema(description = "")
  public Double getTotalActualHours() {
    return totalActualHours;
  }

  public void setTotalActualHours(Double totalActualHours) {
    this.totalActualHours = totalActualHours;
  }

  public ProjectListDTO formattedScheduledEffort(String formattedScheduledEffort) {
    this.formattedScheduledEffort = formattedScheduledEffort;
    return this;
  }

   /**
   * Get formattedScheduledEffort
   * @return formattedScheduledEffort
  **/
  @Schema(description = "")
  public String getFormattedScheduledEffort() {
    return formattedScheduledEffort;
  }

  public void setFormattedScheduledEffort(String formattedScheduledEffort) {
    this.formattedScheduledEffort = formattedScheduledEffort;
  }

  public ProjectListDTO formattedActualHours(String formattedActualHours) {
    this.formattedActualHours = formattedActualHours;
    return this;
  }

   /**
   * Get formattedActualHours
   * @return formattedActualHours
  **/
  @Schema(description = "")
  public String getFormattedActualHours() {
    return formattedActualHours;
  }

  public void setFormattedActualHours(String formattedActualHours) {
    this.formattedActualHours = formattedActualHours;
  }

  public ProjectListDTO overBooked(Boolean overBooked) {
    this.overBooked = overBooked;
    return this;
  }

   /**
   * Get overBooked
   * @return overBooked
  **/
  @Schema(description = "")
  public Boolean isOverBooked() {
    return overBooked;
  }

  public void setOverBooked(Boolean overBooked) {
    this.overBooked = overBooked;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectListDTO projectListDTO = (ProjectListDTO) o;
    return Objects.equals(this.id, projectListDTO.id) &&
        Objects.equals(this.name, projectListDTO.name) &&
        Objects.equals(this.description, projectListDTO.description) &&
        Objects.equals(this.scheduledEffort, projectListDTO.scheduledEffort) &&
        Objects.equals(this.totalActualHours, projectListDTO.totalActualHours) &&
        Objects.equals(this.formattedScheduledEffort, projectListDTO.formattedScheduledEffort) &&
        Objects.equals(this.formattedActualHours, projectListDTO.formattedActualHours) &&
        Objects.equals(this.overBooked, projectListDTO.overBooked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, scheduledEffort, totalActualHours, formattedScheduledEffort, formattedActualHours, overBooked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectListDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    scheduledEffort: ").append(toIndentedString(scheduledEffort)).append("\n");
    sb.append("    totalActualHours: ").append(toIndentedString(totalActualHours)).append("\n");
    sb.append("    formattedScheduledEffort: ").append(toIndentedString(formattedScheduledEffort)).append("\n");
    sb.append("    formattedActualHours: ").append(toIndentedString(formattedActualHours)).append("\n");
    sb.append("    overBooked: ").append(toIndentedString(overBooked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
